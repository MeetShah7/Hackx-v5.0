1.In this tutorial you will learn how to extract text and numbers from a scanned image and convert a PDF document to PNG image using Python libraries such as wand, pytesseract, cv2, and PIL.

Resizing the image
How are we going to complete our goal of text extraction? First we are going to resize the image using cv2.resize with a height value of 1150 and width of 1350 pixels. This image is then saved onto the disk. The code to do this step, and the resized output can be seen below.

imS = cv2.resize(warped, (1350, 1150))
cv2.imshow("output",imS)
cv2.imwrite('Output Image.PNG', imS)
cv2.waitKey(0)


2.Extracting text from the document
To extract text from the image we can use the PIL and pytesseract libraries. We currently perform this step for a single image, but this can be easily modified to loop over a set of images. We can enhance the accuracy of the output by fine tuning the parameters but the objective is to show text extraction. The code to do this step, and the text extraction output can be seen below.

from PIL import Image
import PIL.Image

from pytesseract import image_to_string
import pytesseract

pytesseract.pytesseract.tesseract_cmd = 'C:/Program Files (x86)/Tesseract-OCR/tesseract'
TESSDATA_PREFIX = 'C:/Program Files (x86)/Tesseract-OCR'
output = pytesseract.image_to_string(PIL.Image.open('Output Image.PNG').convert("RGB"), lang='eng')
print output



3.cv2 has a method for OTSU binarization, which would work for bimodal images. It assumes the input intensities distribution to be bi-modal and tries to find the optimal threshold. Otsu binarization automatically calculates a threshold value from image histogram for a bimodal image. The code to do this step, and the Otsu binarization output can be seen below.

import cv2

img = cv2.imread("input_image.png", 0)
ret, thresh = cv2.threshold(img, 10, 255, cv2.THRESH_OTSU)
print "Threshold selected : ", ret
cv2.imwrite("./output_image.png", thresh)
